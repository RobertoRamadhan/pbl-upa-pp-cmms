generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model assignment {
  id                                 String            @id
  ticketId                           String            @unique(map: "Assignment_ticketId_key")
  technicianId                       String
  assignedById                       String
  status                             assignment_status @default(PENDING)
  notes                              String?           @db.Text
  startTime                          DateTime?
  endTime                            DateTime?
  assignedAt                         DateTime          @default(now())
  updatedAt                          DateTime
  user_assignment_assignedByIdTouser user              @relation("assignment_assignedByIdTouser", fields: [assignedById], references: [id], map: "Assignment_assignedById_fkey")
  user_assignment_technicianIdTouser user              @relation("assignment_technicianIdTouser", fields: [technicianId], references: [id], map: "Assignment_technicianId_fkey")
  ticket                             ticket            @relation(fields: [ticketId], references: [id], map: "Assignment_ticketId_fkey")
  material                           material[]
  repairlog                          repairlog[]

  @@index([assignedById], map: "Assignment_assignedById_fkey")
  @@index([technicianId], map: "Assignment_technicianId_fkey")
}

model material {
  id           String     @id
  name         String
  quantity     Int
  unit         String
  assignmentId String
  assignment   assignment @relation(fields: [assignmentId], references: [id], map: "Material_assignmentId_fkey")

  @@index([assignmentId], map: "Material_assignmentId_fkey")
}

model repairlog {
  id           String           @id
  assignmentId String
  technicianId String
  description  String           @db.Text
  action       String
  status       repairlog_status @default(ONGOING)
  timeSpent    Int
  attachments  String?
  createdAt    DateTime         @default(now())
  assignment   assignment       @relation(fields: [assignmentId], references: [id], map: "RepairLog_assignmentId_fkey")
  user         user             @relation(fields: [technicianId], references: [id], map: "RepairLog_technicianId_fkey")

  @@index([assignmentId], map: "RepairLog_assignmentId_fkey")
  @@index([technicianId], map: "RepairLog_technicianId_fkey")
}

model technicianprofile {
  id         String @id
  userId     String @unique(map: "TechnicianProfile_userId_key")
  expertise  String
  area       String
  shift      String
  rating     Float  @default(0)
  totalTasks Int    @default(0)
  user       user   @relation(fields: [userId], references: [id], map: "TechnicianProfile_userId_fkey")
}

model ticket {
  id           String          @id
  ticketNumber String          @unique(map: "Ticket_ticketNumber_key")
  category     String
  subject      String
  description  String          @db.Text
  location     String
  priority     ticket_priority @default(MEDIUM)
  status       ticket_status   @default(PENDING)
  reporterId   String
  attachments  String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime
  completedAt  DateTime?
  assignment   assignment?
  user         user            @relation(fields: [reporterId], references: [id], map: "Ticket_reporterId_fkey")

  @@index([reporterId], map: "Ticket_reporterId_fkey")
}

model user {
  id                                       String             @id
  username                                 String             @unique(map: "User_username_key")
  password                                 String
  role                                     user_role          @default(STAFF)
  name                                     String
  email                                    String             @unique(map: "User_email_key")
  phone                                    String?
  department                               String?
  joinDate                                 DateTime           @default(now())
  isActive                                 Boolean            @default(true)
  createdAt                                DateTime           @default(now())
  updatedAt                                DateTime
  assignment_assignment_assignedByIdTouser assignment[]       @relation("assignment_assignedByIdTouser")
  assignment_assignment_technicianIdTouser assignment[]       @relation("assignment_technicianIdTouser")
  repairlog                                repairlog[]
  technicianprofile                        technicianprofile?
  ticket                                   ticket[]
}

enum user_role {
  ADMIN
  STAFF
  TECHNICIAN
}

enum assignment_status {
  PENDING
  ACCEPTED
  REJECTED
  IN_PROGRESS
  COMPLETED
}

enum repairlog_status {
  ONGOING
  COMPLETED
  NEED_PARTS
}

enum ticket_priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ticket_status {
  PENDING
  ASSIGNED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
